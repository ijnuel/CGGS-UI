# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Angular UI

on:
  push:
    branches:
      - main

env:
  WEBAPP_NAME: project-ui
  WEBAPP_PACKAGE_PATH: dist\project-ui\browser
  NODE_VERSION: 18.17.0

permissions:
  contents: read

jobs:
  build:
    runs-on: windows-latest
    outputs:
      artifact-name: build-output
    steps:
    - uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install
      run: npm ci --force

    - name: npm build
      run: npm run build-prod

    - name: Copy web.config
      run: cmd /c 'copy web.config ${{ env.WEBAPP_PACKAGE_PATH }} /y'

    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-output
        path: ${{ env.WEBAPP_PACKAGE_PATH }}

  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-output
        path: ${{ env.WEBAPP_PACKAGE_PATH }}

    # ðŸ§¹ Clean destination folder except `.well-known`
    - name: Clean destination folder
      uses: appleboy/ssh-action@v1.0.0
      with:
        host: ${{ secrets.SERVER_COMPUTER_NAME }}
        username: ${{ secrets.SERVER_USERNAME }}
        password: ${{ secrets.SERVER_PASSWORD }}
        port: 22
        timeout: 30s
        command_timeout: 10m
        proxy_port: 22
        proxy_timeout: 30s
        script: |
          cd "C:\inetpub\wwwroot\${{ secrets.WEBSITE_NAME }}"
          Write-Output "Cleaning up destination folder except '.well-known'..."
          Get-ChildItem -Exclude '.well-known' | Remove-Item -Recurse -Force
          Write-Output "Cleanup complete."

    # ðŸš€ Deploy files
    - name: Deploy to Simply        
      uses: talunzhang/auto-web-deploy@v1.0.1
      with:
        website-name: ${{ secrets.WEBSITE_NAME }}
        server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
        server-username: ${{ secrets.SERVER_USERNAME }}
        server-password: ${{ secrets.SERVER_PASSWORD }}
        source-path: ${{ env.WEBAPP_PACKAGE_PATH }}
