# This workflow will build and push a node.js application to an Azure Web App when a commit is pushed to your default branch.
#
# This workflow assumes you have already created the target Azure App Service web app.
# For instructions see https://docs.microsoft.com/en-us/azure/app-service/quickstart-nodejs?tabs=linux&pivots=development-environment-cli
#
# To configure this workflow:
#
# 1. Download the Publish Profile for your Azure Web App. You can download this file from the Overview page of your Web App in the Azure Portal.
#    For more information: https://docs.microsoft.com/en-us/azure/app-service/deploy-github-actions?tabs=applevel#generate-deployment-credentials
#
# 2. Create a secret in your repository named AZURE_WEBAPP_PUBLISH_PROFILE, paste the publish profile contents as the value of the secret.
#    For instructions on obtaining the publish profile see: https://docs.microsoft.com/azure/app-service/deploy-github-actions#configure-the-github-secret
#
# 3. Change the value for the AZURE_WEBAPP_NAME. Optionally, change the AZURE_WEBAPP_PACKAGE_PATH and NODE_VERSION environment variables below.
#
# For more information on GitHub Actions for Azure: https://github.com/Azure/Actions
# For more information on the Azure Web Apps Deploy action: https://github.com/Azure/webapps-deploy
# For more samples to get started with GitHub Action workflows to deploy to Azure: https://github.com/Azure/actions-workflow-samples

name: Angular UI
on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
  workflow_dispatch:

env:
  WEBAPP_NAME: cggs-ui    # set this to your application's name
  WEBAPP_PACKAGE_PATH: 'dist\cggs-ui'      # set this to the path to your web app project, defaults to the repository root
  NODE_VERSION: '18.17.0'                # set this to the node version to use

permissions:
  contents: read
 
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Change wdir
      run: cd ${{ env.WEBAPP_NAME }}

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ env.NODE_VERSION }}
        cache: 'npm'

    - name: npm install, build, and test
      run: |
        npm install
        npm run build-prod --if-present
#         npm run test --if-present

    - name: Deploy to Simply        
      uses: talunzhang/auto-web-deploy@v1.0.1
      with:
        website-name: ${{ secrets.WEBSITE_NAME }}
        server-computer-name: ${{ secrets.SERVER_COMPUTER_NAME }}
        server-username: ${{ secrets.SERVER_USERNAME }}
        server-password: ${{ secrets.SERVER_PASSWORD }}
        source-path: ${{ env.WEBAPP_PACKAGE_PATH }}
